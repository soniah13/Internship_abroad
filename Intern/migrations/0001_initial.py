# Generated by Django 5.1.2 on 2024-11-11 10:37

import cloudinary.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('flag', cloudinary.models.CloudinaryField(max_length=255, verbose_name='flag_image')),
                ('continent', models.CharField(choices=[('Asia', 'ASIA'), ('Africa', 'AFRICA'), ('australia', 'AUSTRALIA'), ('antarctica', 'ANTARCTICA'), ('europe', 'EUROPE'), ('north_america', 'NORTH_AMERICA'), ('south_america', 'SOUTH_AMERICA')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('student', 'Student'), ('employer', 'Employer')], max_length=20)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('bio', models.TextField(blank=True)),
                ('location', models.CharField(blank=True)),
                ('education', models.CharField(default='university of', max_length=150)),
                ('profile_picture', cloudinary.models.CloudinaryField(default='profile picture', max_length=255)),
                ('groups', models.ManyToManyField(blank=True, related_name='customuser_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='customeruser_permissions_set', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Internship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('company_name', models.CharField(max_length=200)),
                ('picture', cloudinary.models.CloudinaryField(default='picture', max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('duration', models.PositiveIntegerField()),
                ('majors', models.TextField(default='list of majors expected')),
                ('education_level', models.CharField(choices=[('associate certificate', 'Associate certificate'), ("bachelor's degree", "Bachelor's Degree"), ("master's degree", "Master's Degree"), ('Phd degree', 'PHD Degree')], default="bachelor's degree", max_length=50)),
                ('job_description', models.TextField(default='describe th job details')),
                ('about_company', models.TextField(default='say something about company')),
                ('qualifications', models.TextField(default='minimum qualifications')),
                ('benefits', models.TextField(default='what does the student gain?')),
                ('responsibilities', models.TextField(default='in charge of?')),
                ('application_deadline', models.DateTimeField()),
                ('posted_date', models.DateTimeField(auto_now_add=True)),
                ('company_logo', cloudinary.models.CloudinaryField(default='company_logo', max_length=255)),
                ('applicant_count', models.PositiveIntegerField(default=0)),
                ('standard_image', cloudinary.models.CloudinaryField(default='https://res.cloudinary.com/ddqkfdqy8/image/upload/v1730976302/qjliy417egm4jxavpanl.png', max_length=255)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Intern.country')),
                ('employer', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='internships', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applicant_name', models.CharField(max_length=100)),
                ('applicant_email', models.EmailField(max_length=254)),
                ('max_applications', models.PositiveIntegerField(default=15)),
                ('internship', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='Intern.internship')),
                ('applicant', models.ForeignKey(default=1, limit_choices_to={'role': 'student'}, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
